{"version":3,"sources":["images/ideathonheader.png","firebase.js","components/CustomCheckbox.js","Registration.js","reportWebVitals.js","index.js","images/logo.png"],"names":["module","exports","__webpack_require__","p","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","getAnalytics","getStorage","database","getDatabase","CustomCheckbox","withStyles","theme","root","&$checked","color","checked","Checkbox","Registration","createTheme","palette","secondary","main","primary","_useState","useState","_useState2","Object","slicedToArray","firstName","setFirstName","_useState3","_useState4","lastName","setLastName","_useState5","_useState6","email","setEmail","_useState7","_useState8","skills","setSkills","_useState9","_useState10","major","setMajor","_useState11","_useState12","learn","setLearn","_useState13","_useState14","dietaryRestriction","setDietaryRestriction","_useState15","_useState16","otherDietaryRestriction","setOtherDietaryRestriction","_useState17","_useState18","selectYear","setSelectYear","_useState19","_useState20","_useState21","_useState22","selectSchool","setSelectedSchool","_useState23","_useState24","resumeName","setResumeName","_useState25","_useState26","uploadResume","setUploadResume","_useState27","_useState28","isResumePicked","setIsResumePicked","_useState29","_useState30","progress","setProgress","selectRestrictions","event","restList","includes","target","value","restList2","filter","index","arr","push","_handleSubmit","asyncToGenerator","_regeneratorRuntime","mark","_callee","url","applicant","newPostKey","updates","wrap","_context","prev","next","getDownloadURL","snapshot","ref","sent","schoolYear","uvaSchool","resume","child","key","abrupt","update","stop","apply","this","arguments","react_default","a","createElement","Fragment","ThemeProvider","Grid","container","spacing","direction","alignItems","justifyContent","style","minHeight","Box","sx","width","marginLeft","marginRight","display","Card","boxShadow","flexFlow","backgroundColor","padding","gap","href","src","Logo","borderRadius","Typography","textAlign","TextField","fullWidth","required","id","name","label","variant","type","size","autoComplete","onChange","e","FormControl","InputLabel","Select","labelId","MenuItem","Button","component","&:hover","hidden","accept","storageReference","storageRef","concat","files","uploadResumeToDB","uploadBytesResumable","on","bytesTransferred","totalBytes","changeResumeHandle","LinearProgress","boxSizing","FormGroup","FormControlLabel","control","components_CustomCheckbox","transform","onClick","handleSubmit","reportWebVitals","onPerfEntry","Function","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_Registration","route"],"mappings":"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","file":"static/js/main.b6e6e0a1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ideathonheader.074c8428.png\";","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\nimport { getDatabase } from \"firebase/database\";\r\nimport { getStorage } from \"firebase/storage\";\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAFHTfN6KuOwzDsLdWtmZeFAVpVcI-Npfw\",\r\n    authDomain: \"ideathon-registration-form.firebaseapp.com\",\r\n    databaseURL: \"https://ideathon-registration-form-default-rtdb.firebaseio.com\",\r\n    projectId: \"ideathon-registration-form\",\r\n    storageBucket: \"ideathon-registration-form.appspot.com\",\r\n    messagingSenderId: \"1094596378197\",\r\n    appId: \"1:1094596378197:web:81887879503a76e09c5edc\",\r\n    measurementId: \"G-JSB5Q51DBG\"\r\n};\r\n\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst analytics = getAnalytics(app);\r\nexport const storage = getStorage(app);\r\nexport const database = getDatabase(app);","import { withStyles } from '@mui/styles';\r\nimport { Checkbox } from '@mui/material';\r\n\r\n\r\n\r\nconst checkBoxStyles = theme => ({\r\n    root: {\r\n      '&$checked': {\r\n        color: '#f82249',\r\n      },\r\n    },\r\n    checked: {},\r\n   })\r\n\r\nconst CustomCheckbox = withStyles(checkBoxStyles)(Checkbox);\r\n\r\nexport default CustomCheckbox;","import React, { useState } from 'react';\r\n\r\n// firebase \r\nimport { database, storage } from './firebase';\r\nimport { ref, push, child, update } from \"firebase/database\";\r\nimport { uploadBytesResumable, getDownloadURL } from 'firebase/storage';\r\nimport { ref as storageRef } from 'firebase/storage'; // avoid naming issues\r\n\r\n// import mui styling\r\nimport {\r\n    Box,\r\n    Card,\r\n    Typography,\r\n    InputLabel,\r\n    TextField,\r\n    Select,\r\n    MenuItem,\r\n    LinearProgress,\r\n    Button,\r\n    Checkbox,\r\n    FormControlLabel,\r\n    FormGroup,\r\n    FormControl,\r\n    Grid\r\n} from '@mui/material';\r\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\r\n\r\nimport CustomCheckbox from './components/CustomCheckbox';\r\n\r\n// import logo\r\nimport Logo from \"./images/logo.png\";\r\nimport IdeathonHeader from \"./images/ideathonheader.png\";\r\n\r\nconst Registration = () => {\r\n\r\n    // theme\r\n    const theme = createTheme({\r\n        palette: {\r\n          secondary: {\r\n            main: '#f82249'\r\n          },\r\n          primary: {\r\n            main: '#ff9daf'\r\n          }\r\n\r\n        }\r\n      });\r\n\r\n    // text-fields\r\n    const [firstName, setFirstName] = useState();\r\n    const [lastName, setLastName] = useState();\r\n    const [email, setEmail] = useState();\r\n    const [skills, setSkills] = useState();\r\n    const [major, setMajor] = useState();\r\n    const [learn, setLearn] = useState();\r\n\r\n    // dietary restrictions\r\n    const [dietaryRestriction, setDietaryRestriction] = useState(['none']);\r\n    const [otherDietaryRestriction, setOtherDietaryRestriction] = useState();\r\n\r\n    // year\r\n    const [selectYear, setSelectYear] = useState(2023);\r\n    const [otherSelectYear, setOtherSelectYear] = useState(0);\r\n\r\n    // school\r\n    const [selectSchool, setSelectedSchool] = useState('college');\r\n\r\n    // resume upload\r\n    const [resumeName, setResumeName] = useState();\r\n    const [uploadResume, setUploadResume] = useState();\r\n    const [isResumePicked, setIsResumePicked] = useState(false);\r\n    const [progress, setProgress] = useState(0);\r\n\r\n    const changeResumeHandle = (event) => {\r\n        const storageReference = storageRef(storage, `/ideathon-resume/${selectYear}/${event.target.files[0].name}`);\r\n        const uploadResumeToDB = uploadBytesResumable(storageReference, event.target.files[0]);\r\n\r\n        uploadResumeToDB.on(\"state_changed\", (snapshot) => {\r\n            setProgress((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\r\n            setUploadResume(uploadResumeToDB);\r\n        });\r\n\r\n        setResumeName(event.target.files[0].name);\r\n        setIsResumePicked(true);\r\n    };\r\n\r\n\r\n    // add multiple dietary restrictions\r\n    const selectRestrictions = (event) => {\r\n\r\n        var restList = [];\r\n\r\n        if (restList.includes(event.target.value)) {\r\n            var restList2 = restList.filter(function (value, index, arr) {\r\n                return value !== event.target.value;\r\n            });\r\n            restList = restList2;\r\n        }\r\n        else {\r\n            restList.push(event.target.value)\r\n        }\r\n        setDietaryRestriction(restList);\r\n    };\r\n\r\n    async function handleSubmit() {\r\n\r\n\r\n        // checks if resume has been uploaded yet or not\r\n        if (progress === 100 && isResumePicked) {\r\n            // download url\r\n            const url = await getDownloadURL(uploadResume.snapshot.ref);\r\n\r\n            // update dietary restrictions with other value\r\n            dietaryRestriction.push(otherDietaryRestriction);\r\n\r\n            // update school year if other\r\n            // if (otherSelectYear !== 0) {\r\n            //     setSelectYear(otherSelectYear);\r\n            // }\r\n\r\n            let applicant = {\r\n                firstName: firstName,\r\n                lastName: lastName,\r\n                email: email,\r\n                schoolYear: selectYear,\r\n                uvaSchool: selectSchool,\r\n                resume: url,\r\n                skills: skills,\r\n                learn: learn,\r\n                major: major,\r\n                dietaryRestriction: dietaryRestriction,\r\n            };\r\n\r\n            const newPostKey = push(child(ref(database), 'posts')).key;\r\n            const updates = {};\r\n            updates['/' + newPostKey] = applicant;\r\n            return update(ref(database), updates);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <ThemeProvider theme={theme}>\r\n                <Grid\r\n                    container\r\n                    spacing={0}\r\n                    direction=\"column\"\r\n                    alignItems=\"center\"\r\n                    justifyContent=\"center\"\r\n                    style={{ minHeight: '100vh' }}\r\n                >\r\n                    <Box\r\n                        sx={{\r\n                            width: \"100%\",\r\n                            justifyContent: \"center\",\r\n                            alignItems: \"center\",\r\n                            marginLeft: \"auto\",\r\n                            marginRight: \"auto\",\r\n                            display: \"flex\",\r\n                        }}\r\n                    >\r\n                        <Card\r\n                            sx={{\r\n                                boxShadow: 4,\r\n                                display: \"flex\",\r\n                                flexFlow: \"column nowrap\",\r\n                                width: \"992px\",\r\n                                alignItems: \"center\",\r\n                                backgroundColor: \"#fff\",\r\n                                padding: \"14px 18px\",\r\n                                gap: \"16px\",\r\n                            }}\r\n                        >\r\n\r\n                            {/* IDEATHON LOGO */}\r\n                            <a href=\"https://ideathon.hoohacks.io \">\r\n                                <img\r\n                                    src={Logo}\r\n                                    style={{\r\n                                        borderRadius: \"5px\",\r\n                                        width: \"427px\",\r\n                                    }}\r\n                                    \r\n                                />\r\n                            </a>\r\n\r\n\r\n                            <Typography sx={{ textAlign: \"center\", }}>\r\n                                The third annual Ideathon is a networking, team-building, and pitching event designed to help students with technical experience and students with business experience build their technical business ideas.  Student teams can meet 1:1 with industry experts about their ideas and form long lasting relationships with them as they continue to grow their ideas. Corporate sponsors will be holding workshops to teach students about pitching their ideas, valuing their potential businesses, and building technical prototypes. There will be a two hour pitch event, where teams will pitch to a board of sponsors for funding. Teams will have the opportunity to win thousands of dollars in funding in order to bring their idea to fruition!\r\n                            </Typography>\r\n\r\n                            <Box\r\n                                sx={{\r\n                                    width: \"100%\",\r\n                                    display: \"flex\",\r\n                                    flexFlow: \"row nowrap\",\r\n                                    justifyContent: \"center\",\r\n                                    gap: \"8px\"\r\n                                }}\r\n                            >\r\n                                <TextField\r\n                                    fullWidth=\"true\"\r\n                                    required\r\n                                    id=\"first-name\"\r\n                                    name=\"first-name\"\r\n                                    label=\"First Name\"\r\n                                    variant=\"outlined\"\r\n                                    value={firstName}\r\n                                    type=\"text\"\r\n                                    size=\"small\"\r\n                                    autoComplete=\"first-name\"\r\n                                    onChange={(e) => setFirstName(e.target.value)}\r\n                                />\r\n                                <TextField\r\n                                    fullWidth=\"true\"\r\n                                    required\r\n                                    id=\"last-name\"\r\n                                    name=\"last-name\"\r\n                                    variant=\"outlined\"\r\n                                    label=\"Last Name\"\r\n                                    size=\"small\"\r\n                                    value={lastName}\r\n                                    type=\"text\"\r\n                                    autoComplete=\"last-name\"\r\n                                    onChange={(e) => setLastName(e.target.value)}\r\n                                />\r\n                            </Box>\r\n                            <Box\r\n                                sx={{\r\n                                    width: \"100%\",\r\n                                    display: \"flex\",\r\n                                    flexFlow: \"row nowrap\",\r\n                                    justifyContent: \"center\",\r\n                                    gap: \"8px\"\r\n                                }}\r\n                            >\r\n                                <TextField\r\n                                    fullWidth=\"true\"\r\n                                    required\r\n                                    id=\"Email\"\r\n                                    label=\"Email Address\"\r\n                                    name=\"Email\"\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    value={email}\r\n                                    type=\"email\"\r\n                                    autoComplete=\"email\"\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                />\r\n                                <TextField\r\n                                    fullWidth=\"true\"\r\n                                    required\r\n                                    id=\"major\"\r\n                                    label=\"What is your major/intended major?\"\r\n                                    name=\"major\"\r\n                                    variant=\"outlined\"\r\n                                    value={major}\r\n                                    size=\"small\"\r\n                                    type=\"text\"\r\n                                    autoComplete=\"major\"\r\n                                    onChange={(e) => setMajor(e.target.value)}\r\n                                />\r\n                            </Box>\r\n                            <Box\r\n                                sx={{\r\n                                    width: \"100%\",\r\n                                    display: \"flex\",\r\n                                    flexFlow: \"column nowrap\",\r\n                                    gap: \"8px\"\r\n                                }}\r\n                            >\r\n                                <FormControl size=\"small\">\r\n                                    <InputLabel>Expected Graduation Date</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"school-year-select\"\r\n                                        label=\"Expected Graduation Date\"\r\n                                        value={selectYear}\r\n                                        onChange={(e) => setSelectYear(e.target.value)}\r\n                                    >\r\n                                        <MenuItem value={2023}>2023</MenuItem>\r\n                                        <MenuItem value={2024}>2024</MenuItem>\r\n                                        <MenuItem value={2025}>2025</MenuItem>\r\n                                        <MenuItem value={2026}>2026</MenuItem>\r\n                                        {/* <MenuItem value={0} onClick={(e) => console.log(e.target.value)}>Other</MenuItem> */}\r\n\r\n                                    </Select>\r\n                                    {/* {selectYear === 0 ? (\r\n                                            <>\r\n                                                <TextField\r\n                                                    id=\"other-year\"\r\n                                                    label=\"Different Graduation Date\"\r\n                                                    name=\"other-year\"\r\n                                                    variant=\"outlined\"\r\n                                                    size=\"small\"\r\n                                                    type=\"text\"\r\n                                                    autoComplete=\"selectYear\"\r\n                                                    sx={{marginTop: \"8px\"}}\r\n                                                    onChange={(e) => setOtherSelectYear(e.target.value)}\r\n                                                />\r\n                                            </>\r\n                                        ) : null} */}\r\n                                </FormControl>\r\n                            </Box>\r\n                            <Box\r\n                                sx={{\r\n                                    width: \"100%\",\r\n                                    display: \"flex\",\r\n                                    flexFlow: \"column nowrap\",\r\n                                    gap: \"4px\"\r\n                                }}\r\n                            >\r\n                                <FormControl size=\"small\">\r\n                                    <InputLabel id=\"school-select\">University of Virginia School</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"school-select\"\r\n                                        label=\"University of Virginia School\"\r\n                                        value={selectSchool}\r\n                                        onChange={(e) => setSelectedSchool(e.target.value)}\r\n                                    >\r\n                                        <MenuItem value={\"college\"}>College of Arts and Science</MenuItem>\r\n                                        <MenuItem value={\"engineering\"}>School of Engineering and Applied Science</MenuItem>\r\n                                        <MenuItem value={\"commerce\"}>McIntire School of Commerce</MenuItem>\r\n                                        <MenuItem value={\"architecture\"}>School of Architecture</MenuItem>\r\n                                        <MenuItem value={\"wise\"}>UVA's College at Wise</MenuItem>\r\n                                        <MenuItem value={\"medicine\"}>School of Medicine</MenuItem>\r\n                                        <MenuItem value={\"law\"}>School of Law</MenuItem>\r\n                                        <MenuItem value={\"business\"}>Darden School of Business</MenuItem>\r\n                                        <MenuItem value={\"education\"}>School of Education and Human Development</MenuItem>\r\n                                        <MenuItem value={\"professional\"}>School of Continuing & Professional Studies</MenuItem>\r\n\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            <Box\r\n                                sx={{\r\n                                    width: \"100%\",\r\n                                    display: \"flex\",\r\n                                    flexFlow: \"column nowrap\",\r\n                                    gap: \"4px\"\r\n                                }}\r\n                            >\r\n                                {/* <Input type=\"file\" name=\"resume\" onChange={changeResumeHandle} /> */}\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    component=\"label\"\r\n                                    sx={{\r\n                                        backgroundColor: \"#f82249\",\r\n                                        color: \"#fff\",\r\n                                        \"&:hover\": {\r\n                                            backgroundColor: \"#fff\",\r\n                                            color: \"#f82249\",\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    {progress < 100 ? \"Upload Resume\" : resumeName}\r\n                                    <input\r\n                                        type=\"file\"\r\n                                        hidden=\"true\"\r\n                                        accept=\"application/msword, application/pdf\"\r\n                                        onChange={(e) => changeResumeHandle(e)}\r\n                                    />\r\n                                </Button>\r\n                                <LinearProgress variant=\"determinate\" value={progress} />\r\n                            </Box>\r\n                            <Box\r\n                                sx={{\r\n                                    width: \"100%\",\r\n                                    display: \"flex\",\r\n                                    flexFlow: \"column\",\r\n                                    gap: \"8px\",\r\n                                    boxSizing: \"border-box\",\r\n                                }}\r\n                            >\r\n                                <Typography id=\"skills\">\r\n                                    What are some skills that you possess that you think would be helpful\r\n                                    for Ideathon participants? This will be used primarily for team building. *\r\n                                </Typography>\r\n                                <TextField\r\n                                    required\r\n                                    id=\"skills\"\r\n                                    name=\"skills\"\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    value={skills}\r\n                                    autoComplete=\"skills\"\r\n                                    onChange={(e) => setSkills(e.target.value)}\r\n                                />\r\n                            </Box>\r\n                            <Box\r\n                                sx={{\r\n                                    width: \"100%\",\r\n                                    display: \"flex\",\r\n                                    flexFlow: \"column\",\r\n                                    gap: \"8px\",\r\n                                    boxSizing: \"border-box\",\r\n                                }}\r\n                            >\r\n                                <Typography id=\"learn\">\r\n                                    What would you like to learn or get out of the Ideathon? *\r\n                                </Typography>\r\n                                <TextField\r\n                                    required\r\n                                    id=\"learn\"\r\n                                    name=\"learn\"\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    value={learn}\r\n                                    autoComplete=\"learn\"\r\n                                    onChange={(e) => setLearn(e.target.value)}\r\n                                />\r\n                            </Box>\r\n                            <Box\r\n                                sx={{\r\n                                    width: \"100%\",\r\n                                    display: \"flex\",\r\n                                    flexFlow: \"column\",\r\n                                    gap: \"8px\"\r\n                                }}\r\n                            >\r\n                                <FormGroup\r\n                                >\r\n                                    <InputLabel id=\"dietary-restriction\">Dietary Restrictions</InputLabel>\r\n\r\n                                    <FormControlLabel control={<CustomCheckbox onChange={selectRestrictions} />} label=\"Vegetarian\" value=\"vegetarian\" />\r\n                                    <FormControlLabel control={<Checkbox onChange={selectRestrictions} />} label=\"Gluten Free\" value=\"gluten-free\" />\r\n                                    <FormControlLabel control={<Checkbox onChange={selectRestrictions} />} label=\"Vegan\" value=\"vegan\" />\r\n                                    <FormControlLabel control={<Checkbox onChange={selectRestrictions} />} label=\"Other\" value=\"other\" />\r\n                                    {dietaryRestriction.includes(\"other\") ? (\r\n                                        <>\r\n                                            <InputLabel id=\"dietary-specify-other\">Specify Other Dietary Restriction</InputLabel>\r\n                                            <TextField\r\n                                                id=\"dietary-specify-other\"\r\n                                                name=\"dietary-specify-other\"\r\n                                                variant=\"outlined\"\r\n                                                size=\"small\"\r\n                                                type=\"text\"\r\n                                                value={otherDietaryRestriction}\r\n                                                autoComplete=\"dietary-specify-other\"\r\n                                                onChange={(e) => setOtherDietaryRestriction(e.target.value)}\r\n                                            />\r\n                                        </>\r\n                                    ) : null}\r\n\r\n                                </FormGroup>\r\n                            </Box>\r\n                            <Button\r\n                                sx={{\r\n                                    backgroundColor: \"#f82249\",\r\n                                    color: \"#fff\",\r\n                                    boxShadow: 2,\r\n                                    \"&:hover\": {\r\n                                        transform: \"scale3d(1.05, 1.05, 1)\",\r\n                                        backgroundColor: \"#fff\",\r\n                                        color: \"#f82249\",\r\n                                    }\r\n                                }}\r\n                                type=\"submit\"\r\n                                onClick={() => handleSubmit()}\r\n                            >\r\n                                Submit Registration\r\n                            </Button>\r\n                        </Card>\r\n                    </Box>\r\n                </Grid>\r\n            </ThemeProvider>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Registration;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport Registration from './Registration';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Registration route />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/logo.8887ae4c.png\";"],"sourceRoot":""}