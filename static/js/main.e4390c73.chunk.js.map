{"version":3,"sources":["firebase.js","Registration.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","getAnalytics","getStorage","getDatabase","Registration","_useState","useState","_useState2","Object","slicedToArray","firstName","setFirstName","_useState3","_useState4","lastName","setLastName","_useState5","_useState6","email","setEmail","_useState7","_useState8","skills","setSkills","_useState9","_useState10","dietaryRestriction","setDietaryRestriction","_useState11","_useState12","selectYear","setSelectYear","_useState13","_useState14","selectSchool","setSelectedSchool","_useState15","_useState16","_useState17","_useState18","selectedResume","setSelectedResume","_useState19","_useState20","setIsResumePicked","_useState21","_useState22","downloadURL","setDownloadURL","react_default","a","createElement","Fragment","Box","sx","width","justifyContent","alignItems","marginLeft","marginRight","display","Card","flexFlow","backgroundColor","padding","gap","Typography","InputLabel","id","TextField","name","variant","value","type","size","autoComplete","onChange","e","target","htmlFor","Select","labelId","label","MenuItem","Input","event","files","console","log","Button","onClick","storageReference","storageRef","concat","uploadResume","uploadBytesResumable","on","err","alert","url","getDownloadURL","snapshot","ref","applicant","schoolYear","uvaSchool","resume","handleSubmit","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_Registration","route"],"mappings":"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","file":"static/js/main.e4390c73.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\nimport { getDatabase } from \"firebase/database\";\r\nimport { getStorage } from \"firebase/storage\";\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAFHTfN6KuOwzDsLdWtmZeFAVpVcI-Npfw\",\r\n    authDomain: \"ideathon-registration-form.firebaseapp.com\",\r\n    databaseURL: \"https://ideathon-registration-form-default-rtdb.firebaseio.com\",\r\n    projectId: \"ideathon-registration-form\",\r\n    storageBucket: \"ideathon-registration-form.appspot.com\",\r\n    messagingSenderId: \"1094596378197\",\r\n    appId: \"1:1094596378197:web:81887879503a76e09c5edc\",\r\n    measurementId: \"G-JSB5Q51DBG\"\r\n};\r\n\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst analytics = getAnalytics(app);\r\nexport const storage = getStorage(app);\r\nexport const database = getDatabase(app);","import React, {useState} from 'react';\r\n\r\n// firebase \r\nimport { database } from './firebase';\r\nimport { storage } from './firebase';\r\nimport {ref,push,child,update} from \"firebase/database\";\r\nimport { uploadBytesResumable, getDownloadURL } from 'firebase/storage';\r\nimport { ref as storageRef } from 'firebase/storage'; // avoid naming issues\r\n\r\n// import mui styling\r\nimport {\r\n    Box,\r\n    Card,\r\n    Typography,\r\n    InputLabel,\r\n    TextField,\r\n    Select,\r\n    MenuItem,\r\n    Input,\r\n    Button,\r\n} from '@mui/material';\r\n\r\nconst Registration = () => {\r\n\r\n    // text-fields\r\n    const [firstName, setFirstName] = useState();\r\n    const [lastName, setLastName] = useState();\r\n    const [email, setEmail] = useState();\r\n    const [skills, setSkills] = useState();\r\n\r\n    // dietary restrictions\r\n    const [dietaryRestriction, setDietaryRestriction] = useState('none');\r\n\r\n    // year\r\n    const [selectYear, setSelectYear] = useState(1);\r\n\r\n    // school\r\n    const [selectSchool, setSelectedSchool] = useState('college');\r\n    const [isSchoolSelected, setIsSchoolSelected] = useState(false);\r\n\r\n    // resume upload\r\n    const [selectedResume, setSelectedResume] = useState();\r\n\tconst [isResumePicked, setIsResumePicked] = useState(false);\r\n\r\n    // download url\r\n    const [downloadURL, setDownloadURL] = useState();\r\n\r\n    const changeResumeHandle = (event) => {\r\n\t\tsetSelectedResume(event.target.files[0]);\r\n        console.log(event.target.files[0].name);\r\n\t\tsetIsResumePicked(true);\r\n\t};\r\n\r\n    const handleSubmit = () => {\r\n\r\n        const storageReference = storageRef(storage, `/ideathon-resume/${selectedResume.name}`);\r\n        const uploadResume = uploadBytesResumable(storageReference, selectedResume);\r\n\r\n        // get download url\r\n        uploadResume.on(\r\n            \"state_changed\",\r\n            (err) => console.alert(err),\r\n            () => {\r\n                let url = getDownloadURL(uploadResume.snapshot.ref);\r\n                setDownloadURL(url);\r\n            }\r\n        )\r\n\r\n        let applicant = {\r\n            firstName: firstName,\r\n            lastName: lastName,\r\n            email: email,\r\n            schoolYear: selectYear,\r\n            uvaSchool: selectSchool,\r\n            resume: downloadURL,\r\n            skills: skills,\r\n        };\r\n\r\n        console.log(applicant);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Box\r\n                sx={{\r\n                    width: \"100%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    marginLeft: \"auto\",\r\n                    marginRight: \"auto\",\r\n                    display: \"flex\",\r\n                }}\r\n            >\r\n                <Card\r\n                    sx={{\r\n                        display: \"flex\",\r\n                        flexFlow: \"column nowrap\",\r\n                        width: \"992px\",\r\n                        alignItems: \"center\",\r\n                        backgroundColor: \"#fff\",\r\n                        padding: \"14px 18px\",\r\n                        gap: \"16px\",\r\n                    }}\r\n                >\r\n\r\n                    <Typography>Registration</Typography>\r\n\r\n                    <Box\r\n                        sx={{\r\n                            width: \"100%\",\r\n                            display: \"flex\",\r\n                            flexFlow: \"column nowrap\",\r\n                            gap: \"4px\"\r\n                        }}\r\n                    >\r\n                        <InputLabel id=\"first-name\">\r\n                            First Name\r\n                        </InputLabel>\r\n                        <TextField\r\n                            id=\"first-name\"\r\n                            name=\"first-name\"\r\n                            variant=\"outlined\"\r\n                            value={firstName}\r\n                            type=\"text\"\r\n                            size=\"small\"\r\n                            autoComplete=\"first-name\"\r\n                            onChange={(e) => setFirstName(e.target.value)}\r\n                        />\r\n                    </Box>\r\n                    <Box\r\n                        sx={{\r\n                            width: \"100%\",\r\n                            display: \"flex\",\r\n                            flexFlow: \"column nowrap\",\r\n                            gap: \"8px\"\r\n                        }}\r\n                    >\r\n                        <InputLabel id=\"last-name\">\r\n                            Last Name \r\n                        </InputLabel>\r\n                        <TextField\r\n                            id=\"last-name\"\r\n                            name=\"last-name\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            type={lastName}\r\n                            autoComplete=\"last-name\"\r\n                            onChange={(e) => setLastName(e.target.value)}\r\n                        />\r\n                    </Box>\r\n                    <Box\r\n                        sx={{\r\n                            width: \"100%\",\r\n                            display: \"flex\",\r\n                            flexFlow: \"column nowrap\",\r\n                            gap: \"8px\"\r\n                        }}\r\n                    >\r\n                        <InputLabel id=\"Email\" htmlFor=\"Email\">\r\n                            Email *\r\n                        </InputLabel>\r\n                        <TextField\r\n                            id=\"Email\"\r\n                            name=\"Email\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            type=\"email\"\r\n                            autoComplete=\"email\"\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                    </Box>\r\n                    <Box\r\n                        sx={{\r\n                            width: \"100%\",\r\n                            display: \"flex\",\r\n                            flexFlow: \"column nowrap\",\r\n                            gap: \"8px\"\r\n                        }}\r\n                    >\r\n                        <InputLabel id=\"school-year-select\">School Year</InputLabel>\r\n                        <Select\r\n                            labelId=\"school-year-select\"\r\n                            label=\"Year\"\r\n                            value={selectYear}\r\n                            onChange={(e) => setSelectYear(e.target.value)}\r\n                        >\r\n                            <MenuItem value={1}>1st Year</MenuItem>\r\n                            <MenuItem value={2}>2nd Year</MenuItem>\r\n                            <MenuItem value={3}>3rd Year</MenuItem>\r\n                            <MenuItem value={4}>4th Year</MenuItem>\r\n                        </Select>\r\n                    </Box>\r\n                    <Box\r\n                        sx={{\r\n                            width: \"100%\",\r\n                            display: \"flex\",\r\n                            flexFlow: \"column nowrap\",\r\n                            gap: \"8px\"\r\n                        }}\r\n                    >\r\n                        <InputLabel id=\"school-select\">University of Virginia School</InputLabel>\r\n                        <Select\r\n                            labelId=\"school-select\"\r\n                            label=\"School\"\r\n                            // value={isSchoolSelected === false ? 'Select School' : selectSchool }\r\n                            value={selectSchool}\r\n                            onChange={(e) => setSelectedSchool(e.target.value)}\r\n                        >\r\n                            <MenuItem value={\"college\"}>College of Arts and Science</MenuItem>\r\n                            <MenuItem value={\"engineering\"}>School of Engineering and Applied Science</MenuItem>\r\n                            <MenuItem value={\"commerce\"}>McIntire School of Commerce</MenuItem>\r\n                            <MenuItem value={\"architecture\"}>School of Architecture</MenuItem>\r\n                            <MenuItem value={\"wise\"}>UVA's College at Wise</MenuItem>\r\n                            <MenuItem value={\"medicine\"}>School of Medicine</MenuItem>\r\n                            <MenuItem value={\"law\"}>School of Law</MenuItem>\r\n                            <MenuItem value={\"business\"}>Darden School of Business</MenuItem>\r\n                            <MenuItem value={\"education\"}>School of Education and Human Development</MenuItem>\r\n                            <MenuItem value={\"professional\"}>School of Continuing & Professional Studies</MenuItem>\r\n\r\n                        </Select>\r\n                    </Box>\r\n                    <Box\r\n                        sx={{\r\n                            width: \"100%\",\r\n                            display: \"flex\",\r\n                            flexFlow: \"column nowrap\",\r\n                            gap: \"8px\"\r\n                        }}\r\n                    >\r\n                        <Input type=\"file\" name=\"resume\" onChange={changeResumeHandle} />\r\n                    </Box>\r\n                    <Box\r\n                        sx={{\r\n                            width: \"100%\",\r\n                            display: \"flex\",\r\n                            flexFlow: \"column\",\r\n                            gap: \"8px\"\r\n                        }}\r\n                    >\r\n                        <InputLabel id=\"skills\">\r\n                            What are some skills that you possess that you think would be helpful\r\n                            for Ideathon participants? This will be used primarily for team building.\r\n                        </InputLabel>\r\n                        <TextField \r\n                            id=\"skills\"\r\n                            name=\"skills\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            value={skills}\r\n                            autoComplete=\"skills\"\r\n                            onChange={(e) => setSkills(e.target.value)}\r\n                        />\r\n                    </Box>\r\n                    <Box\r\n                        sx={{\r\n                            width: \"100%\",\r\n                            display: \"flex\",\r\n                            flexFlow: \"column\",\r\n                            gap: \"8px\"\r\n                        }}\r\n                    >\r\n                        <InputLabel id=\"dietary-restriction-select\">Dietary Restrictions</InputLabel>\r\n                        <Select\r\n                            labelId=\"dietary-restriction-select\"\r\n                            label=\"Dietary Restrictions\"\r\n                            value={dietaryRestriction}\r\n                            onChange={(e) => setDietaryRestriction(e.target.value)}\r\n                        >\r\n                            <MenuItem value={\"none\"}>None</MenuItem>\r\n                            <MenuItem value={\"vegetarian\"}>Vegetarian</MenuItem>\r\n                            <MenuItem value={\"gluten-free\"}>Gluten Free</MenuItem>\r\n                            <MenuItem value={\"vegan\"}>Vegan</MenuItem>\r\n                            <MenuItem value={\"other\"}>Other</MenuItem>\r\n                        </Select>\r\n                        {dietaryRestriction === \"other\" ? (\r\n                            <>\r\n                                <InputLabel id=\"specify-other\">Specify Other Dietary Restriction</InputLabel>\r\n                                <TextField />\r\n                            </>\r\n                        ) : null}\r\n                    </Box>\r\n                    <Button\r\n                        sx={{\r\n                            backgroundColor: \"\"\r\n                        }}\r\n                        type=\"submit\"\r\n                        onClick={() => handleSubmit()}\r\n                    >\r\n                        Submit\r\n                    </Button>\r\n                </Card>\r\n            </Box>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Registration;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport Registration from './Registration';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Registration route />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}